$crema: #f5f5f0;
$verde-medio: #6d9663; /* color3 */
$verde-oscuro: #446c3d; /* color4 */
$verde-suave: #eaefe9;
$rojo-agotado: #dc2626;
$text-dark: #374151; /* Letras oscuras */

.min-h-screen {
  min-height: 100vh;
          margin-top: 50px; /* Añade 50 píxeles de espacio hacia arriba */  

}

.flex {
  display: flex;
}

.flex-col {
  flex-direction: column;
}

.flex-1 {
  flex: 1;
}

.py-12 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.bg-crema {
  background-color: $crema;
}

.container {
  max-width: 1280px;
  margin: 0 auto;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.text-center {
  text-align: center;
}

.mb-12 {
  margin-bottom: 3rem;
}

.mb-16 {
  margin-bottom: 4rem;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mt-16 {
  margin-top: 4rem;
}

.text-3xl {
  font-size: 1.875rem;
}

.text-2xl {
  font-size: 1.5rem;
}

.text-lg {
  font-size: 1.125rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
      margin-top: 0px; /* Añade 50 píxeles de espacio hacia arriba */  

}

.text-verde-oscuro {
  color: $verde-oscuro;

}

.text-gray-600 {
  color: #4b5563;
}

.text-gray-500 {
  color: #6b7280;
}

.text-sm {
  font-size: 0.875rem;
}

.max-w-2xl {
  max-width: 42rem;
}

.space-y-6 {
  & > * + * {
    margin-top: 1.5rem;
  }
}

.items-start {
  align-items: flex-start;
}

.mt-0\.5 {
  margin-top: 0.125rem;
}

.grid {
  display: grid;
  gap: 2rem;

  @media (min-width: 1024px) {
    grid-template-columns: repeat(2, 1fr);
  }

  @media (max-width: 768px) {
    ::ng-deep .mat-grid-list {
      grid-template-columns: repeat(1, 1fr) !important;
    }
  }
}

.card {
  position: relative;
  overflow: hidden;
  border-radius: 0.5rem;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  background-color: $verde-suave;
  transition: box-shadow 0.2s;

  &:hover {
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
  }
}

.h-250px {
  height: 250px;
}

.w-full {
  width: 100%;
}

.image-map {
  height: 100%;
  width: 100%;
  object-fit: cover;
  border-radius: 0.375rem;
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.3);
}

.text-white {
  color: white;
}

button[mat-raised-button] {
  background-color: $verde-medio !important;
  color: white !important;
  padding: 0.5rem 1rem;
  border-radius: 0.25rem;
  transition: background-color 0.2s;

  &:hover {
    background-color: darken($verde-medio, 10%) !important;
  }

  mat-icon {
    font-size: 1rem;
    width: 1rem;
    height: 1rem;
    margin-right: 0.5rem;
  }
}

.text-verde-medio {
  color: $verde-medio !important;
}

mat-icon {
    margin-top: 10px; /* Mueve el icono 10 píxeles hacia abajo */

  font-size: 1.25rem;
  width: 2.25rem;
  height: 1.25rem;
}

.input-group {
  position: relative;
  margin-bottom: 2rem; /* Increased spacing between input fields */

  mat-error {
    font-size: 0.75rem;
    color: $rojo-agotado;
    margin-top: 0.25rem;
    margin-left: 1rem;
    opacity: 0; /* Hidden by default */
    transition: opacity 150ms ease-in-out;

    &.ng-active {
      opacity: 1; /* Show when field is touched and invalid */
    }
  }
}

.input {
  border: solid 1.5px $text-dark;
  border-radius: 1rem;
  background: none;
  padding: 1rem;
  font-size: 1rem;
  color: $text-dark;
  transition: border 150ms cubic-bezier(0.4, 0, 0.2, 1);
  width: 100%;
  box-sizing: border-box;

  &:focus,
  &.ng-valid[required] {
    outline: none;
    border: 1.5px solid $verde-medio;
  }

  &.ng-invalid.ng-touched:not(:focus) {
    border: 1.5px solid $rojo-agotado;
  }
}

textarea.input {
  resize: vertical;
  min-height: 100px;
  max-height: 300px;
}

.user-label {
  position: absolute;
  left: 15px;
  top: 50%;
  transform: translateY(-50%);
  color: $text-dark;
  pointer-events: none;
  font-size: 1rem;
  transition: all 150ms cubic-bezier(0.4, 0, 0.2, 1);
}
.card-no-shadow {
  position: relative;
  overflow: hidden;
  border-radius: 0.5rem;
  background-color: $verde-suave;
}


.input:focus ~ .user-label,
.input.ng-valid[required] ~ .user-label {
  transform: translateY(-0.6rem) scale(0.8); /* Sits on the border */
  background-color: $verde-suave;
  padding: 0 0.2rem;
  color: $verde-medio;
  top: 0;
}